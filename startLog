#!/bin/bash
if [ ! $# -eq 3 ]
then
   echo "Needs exactly 3 argument. Usage: exStart QUERIEFile NumberOfQueries ClientCacheSize"
   exit 1
fi

NBQUERIES=$2
CLIENTCACHE=$3
FILE=$1
#In some of my querie I have !bound in FILTER, bash hate so I deactivate history to allow the script to work everywhere
set +H
#It gets back up at the end
#../zip/queries/scale1000_queries.json
#Start the server
./dockServer > /dev/null
touch tmp/extracted.tmp
#Get the server ip
SERVIP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ldf-server)
RES=0
ALL=0
(( NBQUERIES=NBQUERIES-1 ))
for run in `seq 0 2`;
do
   #Need to find a better way to split query
   RES=0
   printf "$CLIENTCACHE"
   for nbq in `seq 0 $NBQUERIES`;
   do

      LINE=$nbq
      (( LINE=LINE+2 ))
      QUERIE=`sed -n "$LINE"p $FILE | grep -o "\".*\"" | sed 's/^"//' | sed 's/"$//'`
      LOG=""
      TOT=0
      LOGNB=0
      QUERIE=$(printf "$QUERIE")
      docker run --name ldf-urlextractor ldf-urlextractor -q "$QUERIE" -s "http://$SERVIP:3000/scale1000" > tmp/extracted.tmp
      docker rm -f ldf-urlextractor > /dev/null
      #Start client
      (( suiv=nbq+1 ))
      LOG=$(docker run --name ldf-allclient ldf-allclient http://$SERVIP:3000/scale1000 -q "$QUERIE" -c $CLIENTCACHE -l info 2>&1)
      #Remove client
      docker rm -f ldf-allclient > /dev/null
      #Only keep URL
      LOG=`echo -e "$LOG" | awk '{print $11}'`
      TOT=`echo "$LOG" | wc -l`
      #REmove grouping, grep on all, wc -l
      #Regrouping url appearing multiple times
      #LOG=`echo "$LOG" | sort | uniq -c`
      #URL coming from the querie
      LOGNB=`echo "$LOG" | fgrep -f tmp/extracted.tmp | wc -l`
      #LOGNB=`echo "$LOG" | sed 's/^ *//' | awk '{s+=$1} END {print s}'`
      LOGNB=$(echo "scale=4; ($LOGNB*100/$TOT)" | bc)
      printf " $LOGNB"
      RES=$(echo "scale=4; ($RES*$nbq+$LOGNB)/($nbq+1)" | bc)
   done
   printf "\n"
   ALL=$(echo "scale=4; ($ALL*$run+$RES)/($run+1)" | bc)
done
#echo "$ALL"
#Welcome back history
set -H
rm tmp/extracted.tmp
#Stopping the server
docker rm -f ldf-server > /dev/null
