#!/bin/bash
if [ $# -lt 2 ] || [ $# -gt 6 ] ;
then
   echo "Needs exactly 4 arguments. Usage: dockClient ServerIP NameOfDataset/QuerieFile ClientNumber NumberOfQueries"
   echo "An optional 5th arguments can be added to specify the cache size"
   echo "A sixth to add something at the end of res file name"
   exit 1
fi

if [ $3 -lt 1 ]
then
   echo "Client numbers start at 1, careful not to exec more queries than we got"
   exit 1
fi
#Assign args
SERVIP=$1
CLIENTNB=$3
NBQUERIES=$4
DATANAME=$2
(( END=$NBQUERIES*$CLIENTNB ))
(( START=$NBQUERIES*($CLIENTNB-1) ))


#Run the client
echo "Starting client $CLIENTNB"
if [ $# -eq 4 ]
then
   docker run --name ldf-allclient$CLIENTNB -v $(pwd)/../zip/queries/"$DATANAME"_queries.json:/tmp/queries.json ldf-allclient http://$SERVIP:3000/"$DATANAME" -n /tmp/queries.json -e $END -s $START -h 1
elif [ $# -eq 5 ] || [ $# -eq 6 ] ;
then
   CACHE=$5
   suf=$6
   docker run --name ldf-allclient$CLIENTNB -v $(pwd)/../zip/queries/"$DATANAME"_queries.json:/tmp/queries.json ldf-allclient http://$SERVIP:3000/"$DATANAME" -n /tmp/queries.json -e $END -s $START -c $CACHE --res -h 1 > tmp/log/cl$CLIENTNB-$CACHE-$NBQUERIES-$suf.res
fi
echo "Client $CLIENTNB as finished"

#Remove the container once it has executed
#Not using --rm to be sure not to be block by it on a second run
docker rm ldf-allclient$CLIENTNB
echo "Client $CLIENTNB removed"
