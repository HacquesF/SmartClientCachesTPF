#!/bin/bash
##TODO
##Check if prefix exist before trying to apply them
##Add support for QUERIEs with ;
if [ ! $# -eq 2 ]
then
   echo "Needs exactly 2 argument. Usage: extractURLQUERIE Querie ServerIP"
   exit 1
fi

SERVIP=$2
#LINE=$2
#(( LINE=LINE+2 ))
QUERIE=$1
#Each QUERIE is a separate QUERIE
#while read -r QUERIE; do
   #Extract all prefix
   TEMP=`echo -e "$QUERIE" | grep PREFIX`
   #Remove everything before, after and around triples
   QUERIE=`echo "$QUERIE" | sed -n '/^.*WHERE {/,$p'`
   QUERIE=`echo -e "$QUERIE" | sed 's/<//g' | sed 's/>//g' | sed 's/ \.//g' | sed 's/ *}//g' | sed 's/ *WHERE { *//g' | sed 's/OPTIONAL { //g' | grep -v 'FILTER\|ORDER\|LIMIT\|UNION' | sed '/^\s*$/d' | sed 's/{//g' | sed 's/^ *//g'`
   if [ ! $(echo "$TEMP" | sed '/^\s*$/d'| wc -l) -eq 0 ]
   then
      #Extract template from prefix
      TEMP=`echo "$TEMP" | awk '{print $2" "$3}' | sed 's/<//' | sed 's/>//'`
      #Assign prefix to triples
      while read -r pref; do
         PAT=`echo "$pref" | awk '{print $1}'`
         URL=`echo "$pref" | awk '{print $2}'`
         
         QUERIE=`echo -e "$QUERIE" | sed "s|$PAT|$URL|g"`
         
      done <<< "$TEMP"
   fi
   #Make the change of url characters
###   / -> %2F
###   : -> %3A
###   # -> %23

   QUERIE=`echo "$QUERIE" | sed 's/\//%2F/g' | sed 's/:/%3A/g' | sed 's/#/%23/g'`
   QUERIE=`echo "$QUERIE"| sed 's/\?[Aa-Zz0-9]*/a/g'`
   
   #Create the url from the triples, working on one line at a time
   while read -r spo;
   do
      #Extract subject, predicate and object in different variables
      SUB=`echo "$spo" | awk '{print $1}'`
      PRED=`echo "$spo" | awk '{print $2}'`
      OBJ=`echo "$spo" | awk '{print $3}'`
      #Assign the beginning of the URL
      URL="http://$SERVIP:3000/scale1000"
      #Create the end of the url
         #Only add the subject if we have one
      END=`[ ! "${SUB:0:1}" = "a" ] && echo "subject=$SUB"`
         #Only add the predicate if we have one
      if [ ! "${PRED:0:1}" = "a" ]
      then
            #Verify if we add a subject, to know if & is required
            END=`[ $(echo $END | wc -c) -gt 1 ] && echo "$END&"`
            END=$END"predicate=$PRED"
      fi
         #Repeating the steps applied to the predicate on the object
      if [ ! "${OBJ:0:1}" = "a" ]
      then
            END=`[ $(echo $END | wc -c) -gt 1 ] && echo "$END&"`
            END=$END"object=$OBJ"
      fi
      #Adding the end of the url if it exist
      URL=$URL`[ $(echo $END | wc -c) -gt 1 ] && echo "?$END"`
      TOT="$TOT$URL\n"
   done <<< "$QUERIE"
#done <<< "$QUERIES"
echo -ne "$TOT"
#echo -e $TOT |  test.jl
